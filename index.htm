<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>WillFromAfar Generator</title>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<style>
		body {
			font-family: Arial, sans-serif;
			margin: 0;
			padding: 0;
			background-color: #f4f4f4;
		}

		.container {
			width: 80%;
			max-width: 1000px;
			margin: 40px auto;
			background-color: #fff;
			padding: 20px;
			border-radius: 8px;
			box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
		}

		h1 {
			text-align: center;
			color: #333;
			margin-bottom: 20px;
		}

		h2 {
			color: #555;
			margin-top: 30px;
		}

		p, a {
			font-size: 16px;
			color: #333;
		}

		a {
			color: #007BFF;
			text-decoration: none;
		}

		a:hover {
			text-decoration: underline;
		}

		form {
			display: flex;
			flex-direction: column;
			margin-top: 20px;
		}

		label {
			margin-bottom: 8px;
			font-weight: bold;
		}

		select, input[type="text"], button {
			padding: 10px;
			font-size: 16px;
			margin-bottom: 20px;
			border-radius: 5px;
			border: 1px solid #ccc;
			outline: none;
		}

		select:focus, input[type="text"]:focus, button:focus {
			border-color: #007BFF;
		}

		button {
			background-color: #FF0054;
			color: white;
			cursor: pointer;
			border: none;
		}

		button:hover {
			background-color: #b3003b;
		}

		#liveRegion {
			margin-top: 20px;
			color: red;
			font-weight: bold;
		}

		audio {
			display: block;
			width: 100%;
			margin-top: 20px;
			border-radius: 8px;
		}

		details {
			margin-top: 30px;
			padding: 15px;
			background-color: #f9f9f9;
			border-radius: 8px;
		}

		.search-container {
			display: flex;
			align-items: center;
			margin-bottom: 15px;
		}

		#voiceSearch {
			flex: 1;
		}
	</style>
</head>
<body>
	<div class="container">
		<h1>WillFromAfar Generator</h1>
		<p>Generate the funny WillFromAfar voice (and more) in your browser. (Powered by Acapela Magic)</p>

		<h2>Acapela Group text-to-speech voices from your browser</h2>
		<form id="quickspeakForm">
			<div class="search-container">
				<input type="text" id="voiceSearch" placeholder="Search for a voice..." aria-label="Search for a voice">
			</div>

			<label for="voiceSelect">Choose a voice:</label>
			<select id="voiceSelect">
				<option value="">--Select a voice--</option>
			</select>

			<button type="button" id="previewButton">Preview</button>

			<label for="textInput">Text to quickspeak:</label>
			<input type="text" id="textInput" placeholder="Enter text here">

			<button type="submit" id="synthesizeButton">Synthesize</button>
		</form>

		<button type="button" id="downloadButton" style="display:none;">Download Audio</button>

		<div id="liveRegion" aria-live="polite"></div>
		<audio id="audioPlayer" controls style="display: none;"></audio>
	</div>

	<script>
		const audioCache = new Map();
		let currentAudioUrl = '';
		let availableVoices = [];
		function do_synthesis(textOverride) {
			const selectedVoice = $('#voiceSelect').val();
			const inputText = textOverride || $('#textInput').val();
			if (!selectedVoice) {
				$('#liveRegion').text('Please select a voice.');
				return;
			}
			if (!inputText.trim()) {
				$('#liveRegion').text('Please enter text to synthesize.');
				return;
			}
			const audioPlayer = $('#audioPlayer');
			const cacheKey = `${selectedVoice}:${inputText}`;
			if (audioCache.has(cacheKey)) {
				currentAudioUrl = audioCache.get(cacheKey);
				audioPlayer.attr('src', currentAudioUrl);
				audioPlayer.show();
				audioPlayer[0].play();
				$('#downloadButton').show();
				return;
			}
			$.ajax({
				url: `https://www.acapela-cloud.com/api/command/?voice=${encodeURIComponent(selectedVoice)}&text=${encodeURIComponent(inputText)}&output=stream&type=mp3&samplerate=22050&token=bd8b22e3e5ebbaa05ea0055aec4e16c357c29486`,
				method: 'GET',
				success: function (data, status, xhr) {
					if (xhr.status === 200) {
						const contentType = xhr.getResponseHeader('Content-Type');
						const blob = new Blob([data], { type: contentType });
						currentAudioUrl = URL.createObjectURL(blob);
						audioCache.set(cacheKey, currentAudioUrl);
						audioPlayer.attr('src', currentAudioUrl);
						audioPlayer.show();
						audioPlayer[0].play();
						$('#downloadButton').show();
					} else {
						$('#liveRegion').text('Synthesis failed.');
					}
				},
				error: function (xhr) {
					$('#liveRegion').text(`Error: ${xhr.responseText || 'Synthesis request failed.'}`);
				},
				xhrFields: {
					responseType: 'blob'
				}
			});
		}
		function populateVoiceList(searchQuery) {
			searchQuery = (searchQuery || '').toLowerCase()
			const voiceSelect = $('#voiceSelect');
			voiceSelect.empty().append(new Option('--Select a voice--', ''));
			availableVoices.forEach(voice => {
				if (searchQuery == '' || voice.toLowerCase().includes(searchQuery)) {
					voiceSelect.append(new Option(voice, voice));
				}
			});
		}
		function isDesktopPlatform() {
			const userAgent = navigator.userAgent || navigator.vendor || window.opera;

			// Define some common mobile devices
			if (/windows phone/i.test(userAgent) || 
				/iphone|ipod|ipad/i.test(userAgent) || 
				/android/i.test(userAgent) || 
				/blackberry/i.test(userAgent)) {
				return false; // It's a mobile platform
			}
			return true; // It's likely a desktop platform
		}
		document.addEventListener('DOMContentLoaded', function () {
			// Load voices initially
			$.ajax({
				url: 'voices.json',
				method: 'GET',
				success: function (data) {
					if (data.voices && Array.isArray(data.voices)) {
						availableVoices = data.voices;
						populateVoiceList();
					} else {
						$('#liveRegion').text('Failed to load voices.');
					}
				},
				error: function () {
					$('#liveRegion').text('Error fetching voices.');
				}
			});
			$('#quickspeakForm').on('submit', function (event) {
				event.preventDefault(); // Important to prevent form submission
				do_synthesis();
			});
			$('#voiceSearch').on('input', function () {
				const searchQuery = $(this).val();
				populateVoiceList(searchQuery);
			});

			$('#textInput').on('keypress', function (event) {
				if (event.key === 'Enter') {
					event.preventDefault();
					$('#synthesizeButton').click();
				}
			});
			$('#previewButton').on('click', function() {
				const selectedVoice = $('#voiceSelect').val();
				if (selectedVoice) {
					do_synthesis(`Hello there, my name is ${selectedVoice}.`);
				} else {
					$('#liveRegion').text('Please select a voice to preview.');
				}
			});
			$('#voiceSelect').on('dblclick keypress', function(event) {
				if (event.type === 'dblclick' && isDesktopPlatform() || event.type === 'keypress' && event.key === 'Enter') {
					$('#previewButton').click();
				}
			});
			$('#downloadButton').on('click', function () {
				if (currentAudioUrl) {
					const link = document.createElement('a');
					link.href = currentAudioUrl;
					link.download = 'speech'; // Hardcoded filename
					link.click();
				}
			});
		});
	</script>
</body>
</html>